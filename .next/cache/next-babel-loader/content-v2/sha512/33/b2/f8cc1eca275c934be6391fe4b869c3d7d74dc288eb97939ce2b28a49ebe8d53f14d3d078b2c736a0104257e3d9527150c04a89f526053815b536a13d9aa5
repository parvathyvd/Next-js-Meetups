{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paru/Documents/test-projects/next-js/next-js-meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst meetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.id,\n    title: props.title,\n    image: props.image,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://parvathyvd:ganapathy@cluster0.rco3m.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId; //fetch data for single\n\n  return {\n    props: {\n      id: meetupId,\n      title: \"meetup\",\n      image: \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n      address: \"some address\",\n      description: \"some description\"\n    }\n  };\n};\nexport default meetUpDetails;","map":{"version":3,"sources":["/Users/paru/Documents/test-projects/next-js/next-js-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","meetUpDetails","props","id","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACC,EADZ;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AALrB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,mGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD+C,CAE/C;;AACA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEqB,QADC;AAELpB,MAAAA,KAAK,EAAE,QAFF;AAGLC,MAAAA,KAAK,EACH,yGAJG;AAKLC,MAAAA,OAAO,EAAE,cALJ;AAMLC,MAAAA,WAAW,EAAE;AANR;AADF,GAAP;AAUD,CAbM;AAeP,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst meetUpDetails = (props) => {\n  return (\n    <MeetupDetail\n      id={props.id}\n      title={props.title}\n      image={props.image}\n      address={props.address}\n      description={props.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://parvathyvd:ganapathy@cluster0.rco3m.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n  //fetch data for single\n  return {\n    props: {\n      id: meetupId,\n      title: \"meetup\",\n      image:\n        \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n      address: \"some address\",\n      description: \"some description\",\n    },\n  };\n};\n\nexport default meetUpDetails;\n"]},"metadata":{},"sourceType":"module"}