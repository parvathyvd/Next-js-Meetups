{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paru/Documents/test-projects/next-js/next-js-meetup/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst meetupList = [{\n  id: \"m1\",\n  image: \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n  title: \"First meet\",\n  address: \"1213 some city\"\n}, {\n  id: \"m2\",\n  image: \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n  title: \"second meet\",\n  address: \"4343 some city\"\n}, {\n  id: \"m3\",\n  image: \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n  title: \"sfdsaf meet\",\n  address: \"235245 some city\"\n}, {\n  id: \"m4\",\n  image: \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n  title: \"fourth meet\",\n  address: \"12ws13 some city\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  //fetch data from an api\n  const client = await MongoClient.connect(\"mongodb+srv://parvathyvd:ganapathy@cluster0.rco3m.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  return {\n    props: {\n      meetups: meetupList\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/paru/Documents/test-projects/next-js/next-js-meetup/pages/index.js"],"names":["MeetupList","MongoClient","meetupList","id","image","title","address","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,yGAHJ;AAIEC,EAAAA,KAAK,EAAE,YAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CADiB,EAQjB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,yGAHJ;AAIEC,EAAAA,KAAK,EAAE,aAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CARiB,EAejB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,yGAHJ;AAIEC,EAAAA,KAAK,EAAE,aAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAfiB,EAsBjB;AACEH,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EACH,yGAHJ;AAIEC,EAAAA,KAAK,EAAE,aAJT;AAKEC,EAAAA,OAAO,EAAE;AALX,CAtBiB,CAAnB;;AA+BA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AAEA,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,mGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEP;AADJ,KADF;AAILc,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAhBM;AAkBP,eAAeT,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\n\nconst meetupList = [\n  {\n    id: \"m1\",\n    image:\n      \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n    title: \"First meet\",\n    address: \"1213 some city\",\n  },\n  {\n    id: \"m2\",\n    image:\n      \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n    title: \"second meet\",\n    address: \"4343 some city\",\n  },\n  {\n    id: \"m3\",\n    image:\n      \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n    title: \"sfdsaf meet\",\n    address: \"235245 some city\",\n  },\n  {\n    id: \"m4\",\n    image:\n      \"https://cdn.britannica.com/84/73184-004-E5A450B5/Sunflower-field-Fargo-North-Dakota.jpg?s=1500x700&q=85\",\n    title: \"fourth meet\",\n    address: \"12ws13 some city\",\n  },\n];\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n\nexport const getStaticProps = async () => {\n  //fetch data from an api\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://parvathyvd:ganapathy@cluster0.rco3m.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  return {\n    props: {\n      meetups: meetupList,\n    },\n    revalidate: 1,\n  };\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}